@ベジェ・ID
--param:0
local modname="curve_editor"
if not package.loaded[modname] then
	package.preload[modname]=package.loadlib(modname .. ".auf","luaopen_" .. modname)
	require(modname)
	package.preload[modname]=nil
end
local gpt=obj.getpoint
local idx,ratio=math.modf(gpt"index")
local st=gpt(idx)
local ed=gpt(idx+1)
local par=gpt"param"
--ベジェ
if (-2147483647 <= par and par <= -12368443) or (12368443 <= par and par <= 2147483646) then
	return curve_editor.getcurve(0,par,ratio,st,ed)
--ベジェ(複数)
elseif 1 <= par and par <= 1024 then
	return curve_editor.getcurve(1,par,ratio,st,ed)
else
	return gpt"default"
end


@ベジェ・ID(中間点無視)
--twopoint
--param:0
local modname="curve_editor"
if not package.loaded[modname] then
	package.preload[modname]=package.loadlib(modname .. ".auf","luaopen_" .. modname)
	require(modname)
	package.preload[modname]=nil
end
local gpt=obj.getpoint
local par=gpt"param"
--ベジェ
if (-2147483647 <= par and par <= -12368443) or (12368443 <= par and par <= 2147483646) then
	return curve_editor.getcurve(0,par,gpt"totalindex",gpt(0),gpt(1))
--ベジェ(複数)
elseif 1 <= par and par <= 1024 then
	return curve_editor.getcurve(1,par,gpt"totalindex",gpt(0),gpt(1))
else
	return gpt"default"
end


@その他
--param:0
local modname="curve_editor"
if not package.loaded[modname] then
	package.preload[modname]=package.loadlib(modname .. ".auf","luaopen_" .. modname)
	require(modname)
	package.preload[modname]=nil
end
local gpt=obj.getpoint
local idx,ratio=math.modf(gpt"index")
local st=gpt(idx)
local ed=gpt(idx+1)
local par=gpt"param"
return curve_editor.getcurve(3,par,ratio,st,ed)


@その他(中間点無視)
--twopoint
--param:0
local modname="curve_editor"
if not package.loaded[modname] then
	package.preload[modname]=package.loadlib(modname .. ".auf","luaopen_" .. modname)
	require(modname)
	package.preload[modname]=nil
end
local gpt=obj.getpoint
local par=gpt"param"
return curve_editor.getcurve(2,par,gpt"totalindex",gpt(0),gpt(1))